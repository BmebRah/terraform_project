name: Apply Terraform 
env:
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}


on: 
  push:
      branches:
          - main
      
jobs: 
  apply:
      runs-on: ubuntu-latest 
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Terraform Install 
          uses: hashicorp/setup-terraform@v2

        - name: Terraform init
          run: terraform init -input=false
          
        - name: Appl terraform 
          run: terraform apply -auto-approve -input=false
  deploy:
      env:
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      
      runs-on: ubuntu-latest
      needs: apply
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
            aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            aws-region: eu-west-2
    
        - name: Login to ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2
          
          # builds and pushes docker image to ecr

        - name: Build and Push 
          run: |
              docker build -t "$CONTAINER_REGISTRY_URL/$CONTAINER_REPOSITORY_NAME:${{ github.sha }}" .
              docker push "$CONTAINER_REGISTRY_URL/$CONTAINER_REPOSITORY_NAME:${{ github.sha }}"

          env:
            CONTAINER_REGISTRY_URL: ${{ steps.login-ecr.outputs.registry }}
            CONTAINER_REPOSITORY_NAME: bereket_ecr_repo
          